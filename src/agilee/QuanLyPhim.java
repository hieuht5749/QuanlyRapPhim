/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package agilee;

//import java.awt.BorderLayout;
import DAO.MoviesDAO;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Movies;

//import java.awt.Color;
//import java.awt.Font;
//import javax.swing.JFrame;
//import javax.swing.JLabel;
//import javax.swing.JPanel;
//import javax.swing.JScrollPane;
//import javax.swing.JTable;
//import javax.swing.table.DefaultTableCellRenderer;
//import javax.swing.table.JTableHeader;
/**
 *
 * @author admin
 */
public class QuanLyPhim extends javax.swing.JFrame {

    List<Movies> list = new ArrayList<>();
    String strHinhAnh = "";

    /**
     * Creates new form Login
     */
    public QuanLyPhim() {
        initComponents();
        setLocationRelativeTo(null);
        loadDataToTable();

//        JTable table;
//        setTitle("JTableHeader");
//          JTableHeader jTableHeader = jTable2.getTableHeader();          
//          
//        
//
//        setTitle("JTableHeader");
//        jTableHeader.setBackground(Color.ORANGE);
//        jTableHeader.setForeground(Color.BLACK); 
//        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnVe = new javax.swing.JButton();
        btnPhong = new javax.swing.JButton();
        btnThietbi = new javax.swing.JButton();
        btnNhanvien = new javax.swing.JButton();
        btnKhachhang = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        btnPhim = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtMa = new javax.swing.JTextField();
        txtTen = new javax.swing.JTextField();
        txtDaoDien = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        lblPost = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cboHanhDong = new javax.swing.JCheckBox();
        cboPhieuLuu = new javax.swing.JCheckBox();
        cboKinhDi = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        txtGiaPhim = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        cboHocDuong = new javax.swing.JCheckBox();
        cboTinhCam = new javax.swing.JCheckBox();
        cboHoatHinh = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        txtThoiLuong = new javax.swing.JTextField();
        txtNgay = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMovie = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblKenh = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1085, 627));
        setPreferredSize(new java.awt.Dimension(1085, 660));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel1MouseEntered(evt);
            }
        });

        btnVe.setBackground(new java.awt.Color(0, 0, 0));
        btnVe.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnVe.setForeground(new java.awt.Color(255, 255, 255));
        btnVe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/390134.png"))); // NOI18N
        btnVe.setText("VÉ");
        btnVe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnVeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnVeMouseExited(evt);
            }
        });

        btnPhong.setBackground(new java.awt.Color(0, 0, 0));
        btnPhong.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnPhong.setForeground(new java.awt.Color(255, 255, 255));
        btnPhong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/phong.png"))); // NOI18N
        btnPhong.setText("PHÒNG");
        btnPhong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPhongMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnPhongMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnPhongMouseExited(evt);
            }
        });

        btnThietbi.setBackground(new java.awt.Color(0, 0, 0));
        btnThietbi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnThietbi.setForeground(new java.awt.Color(255, 255, 255));
        btnThietbi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/thietbi.png"))); // NOI18N
        btnThietbi.setText("THIẾT BỊ");
        btnThietbi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThietbiMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnThietbiMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnThietbiMouseExited(evt);
            }
        });

        btnNhanvien.setBackground(new java.awt.Color(0, 0, 0));
        btnNhanvien.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnNhanvien.setForeground(new java.awt.Color(255, 255, 255));
        btnNhanvien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/nhanvien.png"))); // NOI18N
        btnNhanvien.setText("NHÂN VIÊN");
        btnNhanvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnNhanvienMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnNhanvienMouseExited(evt);
            }
        });
        btnNhanvien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhanvienActionPerformed(evt);
            }
        });

        btnKhachhang.setBackground(new java.awt.Color(0, 0, 0));
        btnKhachhang.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnKhachhang.setForeground(new java.awt.Color(255, 255, 255));
        btnKhachhang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/khach.png"))); // NOI18N
        btnKhachhang.setText("KHÁCH HÀNG");
        btnKhachhang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnKhachhangMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnKhachhangMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnKhachhangMouseExited(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 51, 51));
        jLabel9.setText("QUẢN LÍ PHIM");

        btnPhim.setBackground(new java.awt.Color(0, 0, 0));
        btnPhim.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnPhim.setForeground(new java.awt.Color(255, 255, 255));
        btnPhim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/a2.png"))); // NOI18N
        btnPhim.setText("PHIM");
        btnPhim.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnPhimMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnPhimMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVe, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThietbi, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPhim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnKhachhang, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNhanvien, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel9)
                .addGap(31, 31, 31)
                .addComponent(btnPhim, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(btnVe, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(btnPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(btnThietbi, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(btnNhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(btnKhachhang, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 220, 600));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 0));
        jLabel1.setText("Mã Phim");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 60, 75, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 153, 51));
        jLabel2.setText("Tên Phim");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, 80, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 153, 51));
        jLabel3.setText("Đạo diễn");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 140, 70, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 153, 0));
        jLabel4.setText("Thể Loại");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 180, 63, -1));

        txtMa.setBackground(new java.awt.Color(0, 153, 0));
        txtMa.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(txtMa, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 60, 140, -1));

        txtTen.setBackground(new java.awt.Color(0, 153, 0));
        txtTen.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(txtTen, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 100, 140, -1));

        txtDaoDien.setBackground(new java.awt.Color(0, 153, 0));
        txtDaoDien.setForeground(new java.awt.Color(255, 255, 255));
        txtDaoDien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDaoDienActionPerformed(evt);
            }
        });
        getContentPane().add(txtDaoDien, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 140, 140, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 153, 51));
        jLabel5.setText("Thời Lượng");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 60, 90, 20));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 153, 51));
        jLabel6.setText("Ngày Phát Hành");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 100, -1, -1));

        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setPreferredSize(new java.awt.Dimension(90, 160));

        lblPost.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblPostMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblPost, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblPost, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(841, 50, 180, 220));

        jLabel8.setForeground(new java.awt.Color(255, 204, 51));
        jLabel8.setText("Poster");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 290, 50, -1));

        cboHanhDong.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        cboHanhDong.setForeground(new java.awt.Color(102, 255, 102));
        cboHanhDong.setText("Hanh Dong");
        cboHanhDong.setBorder(null);
        getContentPane().add(cboHanhDong, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 180, 85, -1));

        cboPhieuLuu.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        cboPhieuLuu.setForeground(new java.awt.Color(102, 255, 102));
        cboPhieuLuu.setText("Phieu Luu");
        getContentPane().add(cboPhieuLuu, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 210, 85, -1));

        cboKinhDi.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        cboKinhDi.setForeground(new java.awt.Color(102, 255, 102));
        cboKinhDi.setText("Kinh Di");
        getContentPane().add(cboKinhDi, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 240, 85, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 153, 51));
        jLabel7.setText("Giá");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 140, 37, -1));

        txtGiaPhim.setBackground(new java.awt.Color(0, 153, 0));
        txtGiaPhim.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(txtGiaPhim, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 140, 140, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setText("Cre: Dr. Stone");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 600, 80, -1));

        cboHocDuong.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        cboHocDuong.setForeground(new java.awt.Color(102, 255, 102));
        cboHocDuong.setText("Hoc Duong");
        getContentPane().add(cboHocDuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 180, -1, -1));

        cboTinhCam.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        cboTinhCam.setForeground(new java.awt.Color(102, 255, 102));
        cboTinhCam.setText("Tinh Cam");
        getContentPane().add(cboTinhCam, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 210, -1, -1));

        cboHoatHinh.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        cboHoatHinh.setForeground(new java.awt.Color(102, 255, 102));
        cboHoatHinh.setText("Hoat Hinh");
        getContentPane().add(cboHoatHinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 240, -1, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(153, 204, 255));
        jLabel12.setText("Tên Tài Khoản: user1");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 10, 150, -1));

        txtThoiLuong.setBackground(new java.awt.Color(0, 153, 0));
        txtThoiLuong.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(txtThoiLuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 60, 140, -1));

        txtNgay.setBackground(new java.awt.Color(0, 153, 0));
        txtNgay.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(txtNgay, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 100, 140, -1));

        tblMovie.setBackground(new java.awt.Color(204, 0, 204));
        tblMovie.setForeground(new java.awt.Color(255, 255, 255));
        tblMovie.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Tên", "SDT", "Địa chỉ", "Mã"
            }
        ));
        tblMovie.setGridColor(new java.awt.Color(153, 51, 0));
        tblMovie.setSelectionBackground(new java.awt.Color(153, 0, 153));
        tblMovie.setShowGrid(false);
        tblMovie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMovieMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblMovie);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 320, 860, 270));

        btnAdd.setBackground(new java.awt.Color(153, 153, 255));
        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/add.png"))); // NOI18N
        btnAdd.setText("ADD");
        btnAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAddMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAddMouseExited(evt);
            }
        });
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 290, -1, -1));

        btnUpdate.setBackground(new java.awt.Color(153, 153, 255));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/edit.png"))); // NOI18N
        btnUpdate.setText("UPDATE");
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnUpdateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnUpdateMouseExited(evt);
            }
        });
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 290, -1, -1));

        btnDelete.setBackground(new java.awt.Color(153, 153, 255));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/delete.png"))); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnDeleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnDeleteMouseExited(evt);
            }
        });
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 290, -1, -1));

        lblKenh.setForeground(new java.awt.Color(102, 255, 102));
        lblKenh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/—Pngtree—geometric purple background with modern_1243070.jpg"))); // NOI18N
        lblKenh.setText("jLabel11");
        getContentPane().add(lblKenh, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 0, 870, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDaoDienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDaoDienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDaoDienActionPerformed

    private void btnNhanvienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhanvienActionPerformed
        Nhanvien();
    }//GEN-LAST:event_btnNhanvienActionPerformed

    public void setColor(JButton p) {
        p.setBackground(new Color(204, 255, 204));
        p.setForeground(new Color(0, 0, 0));
    }

    public void resetColor(JButton p) {
        p.setBackground(new Color(0, 0, 0));
        p.setForeground(new Color(255, 255, 255));
    }

    public void setColor1(JButton p) {
        p.setBackground(new Color(255, 153, 0));
        p.setForeground(new Color(255, 255, 255));
    }

    public void resetColor1(JButton p) {
        p.setBackground(new Color(153, 153, 225));
        p.setForeground(new Color(0, 0, 0));
    }


    private void jPanel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseEntered
        // TODO add your handling code here: 
    }//GEN-LAST:event_jPanel1MouseEntered

    private void btnPhimMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPhimMouseExited
        // TODO add your handling code here:
        resetColor(btnPhim);
    }//GEN-LAST:event_btnPhimMouseExited

    private void btnPhimMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPhimMouseEntered
        // TODO add your handling code here:
        setColor(btnPhim);
    }//GEN-LAST:event_btnPhimMouseEntered

    private void btnVeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVeMouseEntered
        // TODO add your handling code here:
        setColor(btnVe);
    }//GEN-LAST:event_btnVeMouseEntered

    private void btnVeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVeMouseExited
        // TODO add your handling code here:
        resetColor(btnVe);
    }//GEN-LAST:event_btnVeMouseExited

    private void btnPhongMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPhongMouseEntered
        // TODO add your handling code here:
        setColor(btnPhong);
    }//GEN-LAST:event_btnPhongMouseEntered

    private void btnPhongMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPhongMouseExited
        // TODO add your handling code here:
        resetColor(btnPhong);
    }//GEN-LAST:event_btnPhongMouseExited

    private void btnThietbiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThietbiMouseEntered
        // TODO add your handling code here:
        setColor(btnThietbi);
    }//GEN-LAST:event_btnThietbiMouseEntered

    private void btnThietbiMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThietbiMouseExited
        // TODO add your handling code here:
        resetColor(btnThietbi);
    }//GEN-LAST:event_btnThietbiMouseExited

    private void btnNhanvienMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNhanvienMouseEntered
        // TODO add your handling code here:
        setColor(btnNhanvien);
    }//GEN-LAST:event_btnNhanvienMouseEntered

    private void btnNhanvienMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNhanvienMouseExited
        // TODO add your handling code here:
        resetColor(btnNhanvien);
    }//GEN-LAST:event_btnNhanvienMouseExited

    private void btnKhachhangMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnKhachhangMouseEntered
        // TODO add your handling code here:
        setColor(btnKhachhang);
    }//GEN-LAST:event_btnKhachhangMouseEntered

    private void btnKhachhangMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnKhachhangMouseExited
        // TODO add your handling code here:
        resetColor(btnKhachhang);
    }//GEN-LAST:event_btnKhachhangMouseExited

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed

        if (checkFromupdate() && checkMaNull() && checkMaKoTonTai() && checkTrungTenUpdate()) {
            suaPhim();
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (checkMaNull() && checkMaKoTonTai()) {
            xoaPhim();
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnAddMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMouseEntered
        // TODO add your handling code here:
        setColor1(btnAdd);
    }//GEN-LAST:event_btnAddMouseEntered

    private void btnAddMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMouseExited
        // TODO add your handling code here:
        resetColor1(btnAdd);
    }//GEN-LAST:event_btnAddMouseExited

    private void btnUpdateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseEntered
        // TODO add your handling code here:
        setColor1(btnUpdate);
    }//GEN-LAST:event_btnUpdateMouseEntered

    private void btnUpdateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseExited
        // TODO add your handling code here:
        resetColor1(btnUpdate);
    }//GEN-LAST:event_btnUpdateMouseExited

    private void btnDeleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseEntered
        // TODO add your handling code here:
        setColor1(btnDelete);
    }//GEN-LAST:event_btnDeleteMouseEntered

    private void btnDeleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseExited
        // TODO add your handling code here:
        resetColor1(btnDelete);
    }//GEN-LAST:event_btnDeleteMouseExited

    private void tblMovieMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMovieMouseClicked

        int index = tblMovie.getSelectedRow();
        fillToFrom(index);
    }//GEN-LAST:event_tblMovieMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (checkFrom() && checkTrungMa() && checkTrungTen()) {
            insertPhim();
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnVeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVeMouseClicked
        Ve();
    }//GEN-LAST:event_btnVeMouseClicked

    private void btnPhongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPhongMouseClicked
        Phong();
    }//GEN-LAST:event_btnPhongMouseClicked

    private void btnThietbiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThietbiMouseClicked
        Thietbi();
    }//GEN-LAST:event_btnThietbiMouseClicked

    private void btnKhachhangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnKhachhangMouseClicked
        Khachhang();
    }//GEN-LAST:event_btnKhachhangMouseClicked

    private void lblPostMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPostMouseClicked
        uploadHinhAnh();
    }//GEN-LAST:event_lblPostMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyPhim.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyPhim.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyPhim.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyPhim.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyPhim().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnKhachhang;
    private javax.swing.JButton btnNhanvien;
    private javax.swing.JButton btnPhim;
    private javax.swing.JButton btnPhong;
    private javax.swing.JButton btnThietbi;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnVe;
    private javax.swing.JCheckBox cboHanhDong;
    private javax.swing.JCheckBox cboHoatHinh;
    private javax.swing.JCheckBox cboHocDuong;
    private javax.swing.JCheckBox cboKinhDi;
    private javax.swing.JCheckBox cboPhieuLuu;
    private javax.swing.JCheckBox cboTinhCam;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblKenh;
    private javax.swing.JLabel lblPost;
    private javax.swing.JTable tblMovie;
    private javax.swing.JTextField txtDaoDien;
    private javax.swing.JTextField txtGiaPhim;
    private javax.swing.JTextField txtMa;
    private javax.swing.JTextField txtNgay;
    private javax.swing.JTextField txtTen;
    private javax.swing.JTextField txtThoiLuong;
    // End of variables declaration//GEN-END:variables
   public void loadDataToTable() {
        list = MoviesDAO.getAll();
        String[] columnNames = {"MA", "TEN", "DAO DIEN", "GIA", "THE LOAI", "THOI LUONG", "NG_PHAT_HANH", "BACKROUND"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);
        for (Movies movies : list) {
            model.addRow(new Object[]{movies.getMaPhim(), movies.getTenPhim(), movies.getDaoDien(), movies.getGiaPhim(), movies.getTheLoai(), movies.getThoiLuong(), movies.getNgPhatHanh(), movies.getBackround()});
        }
        tblMovie.setModel(model);
    }

    public void fillToFrom(int index) {
        Movies movies = list.get(index);
        txtMa.setText(movies.getMaPhim());
        txtTen.setText(movies.getTenPhim());
        txtDaoDien.setText(movies.getDaoDien());
        cboHanhDong.setSelected(false);
        cboHoatHinh.setSelected(false);
        cboHocDuong.setSelected(false);
        cboKinhDi.setSelected(false);
        cboPhieuLuu.setSelected(false);
        cboTinhCam.setSelected(false);
        for (String theLoai : movies.getTheLoai()) {
            if (theLoai.equalsIgnoreCase("Hoat Hinh")) {
                cboHoatHinh.setSelected(true);
            }
            if (theLoai.equalsIgnoreCase("Hanh Dong")) {
                cboHanhDong.setSelected(true);
            }
            if (theLoai.equalsIgnoreCase("Hoc Duong")) {
                cboHocDuong.setSelected(true);
            }
            if (theLoai.equalsIgnoreCase("Tinh Cam")) {
                cboTinhCam.setSelected(true);
            }
            if (theLoai.equalsIgnoreCase("Kinh Di")) {
                cboKinhDi.setSelected(true);
            }
            if (theLoai.equalsIgnoreCase("Phieu luu")) {
                cboPhieuLuu.setSelected(true);
            }
        }
        txtThoiLuong.setText(String.valueOf(movies.getThoiLuong()));
        SimpleDateFormat df = new SimpleDateFormat("dd-MM-yyyy");
        String rDate = df.format(movies.getNgPhatHanh());
        txtNgay.setText(rDate);
        txtGiaPhim.setText(movies.getGiaPhim());
        try {
            lblPost.setText("");
            ImageIcon imgIcon = new ImageIcon(getClass().getResource("/Icon/" + movies.getBackround().toString()));
            Image img = imgIcon.getImage();
            lblPost.setIcon(new ImageIcon(img.getScaledInstance(lblPost.getWidth(), lblPost.getHeight(), 0)));
            strHinhAnh = movies.getBackround().toString();

        } catch (Exception e) {
            lblPost.setIcon(null);
            lblPost.setText("no avata");
        }
    }

    public void insertPhim() {
        Movies movies = new Movies();
        movies.setMaPhim(txtMa.getText());
        movies.setTenPhim(txtTen.getText());
        movies.setDaoDien(txtDaoDien.getText());
        movies.setGiaPhim(txtGiaPhim.getText());
        ArrayList<String> theLoai = new ArrayList();
        if (cboHanhDong.isSelected()) {
            theLoai.add("Hanh Dong");
        }
        if (cboHoatHinh.isSelected()) {
            theLoai.add("Hoat Hinh");

        }
        if (cboHocDuong.isSelected()) {
            theLoai.add("Hoc Duong");
        }
        if (cboKinhDi.isSelected()) {
            theLoai.add("Kinh Di");
        }
        if (cboPhieuLuu.isSelected()) {
            theLoai.add("Phieu luu");
        }
        if (cboTinhCam.isSelected()) {
            theLoai.add("Tinh Cam");
        }
        movies.setTheLoai(theLoai);
        movies.setThoiLuong(Integer.parseInt(txtThoiLuong.getText()));
        movies.setNgPhatHanh(java.sql.Date.valueOf(txtNgay.getText()));
        movies.setBackround(String.valueOf(strHinhAnh));
        int rs = MoviesDAO.insert(movies);
        loadDataToTable();
        if (rs > 0) {
            JOptionPane.showMessageDialog(null, "them thanh cong");

        } else {
            JOptionPane.showMessageDialog(null, "them that bai");
        }
    }

    public void suaPhim() {
        String ma = txtMa.getText();
        for (Movies movies : list) {
            if (ma.equals(movies.getMaPhim())) {

                movies.setTenPhim(txtTen.getText());
                movies.setDaoDien(txtDaoDien.getText());
                movies.setGiaPhim(txtGiaPhim.getText());
                ArrayList<String> theLoai = new ArrayList<>();
                if (cboHanhDong.isSelected()) {
                    theLoai.add("Hanh Dong");
                }
                if (cboHoatHinh.isSelected()) {
                    theLoai.add("Hoat Hinh");

                }
                if (cboHocDuong.isSelected()) {
                    theLoai.add("Hoc Duong");
                }
                if (cboKinhDi.isSelected()) {
                    theLoai.add("Kinh Di");
                }
                if (cboPhieuLuu.isSelected()) {
                    theLoai.add("Phieu luu");
                }
                if (cboTinhCam.isSelected()) {
                    theLoai.add("Tinh Cam");
                }
                movies.setTheLoai(theLoai);
                movies.setThoiLuong(Integer.parseInt(txtThoiLuong.getText()));
                movies.setNgPhatHanh(java.sql.Date.valueOf(txtNgay.getText()));
                System.out.println(""+strHinhAnh);
                movies.setBackround(String.valueOf(strHinhAnh));
                int rs = MoviesDAO.update(movies);
                loadDataToTable();
                if (rs > 0) {
                    JOptionPane.showMessageDialog(null, "sua thanh cong");

                } else {
                    JOptionPane.showMessageDialog(null, "sua that bai");
                }
                break;
            }
        }
    }

    public void xoaPhim() {

        String ma = txtMa.getText();
        for (Movies movies : list) {
            if (ma.equals(movies.getMaPhim())) {
                int rs = MoviesDAO.delet(movies);
                loadDataToTable();
                if (rs > 0) {
                    JOptionPane.showMessageDialog(null, "xoa thanh cong");

                } else {
                    JOptionPane.showMessageDialog(null, "xoa that bai");
                }
                break;
            }
        }
    }

    public void uploadHinhAnh() {
        try {
            JFileChooser jfc = new JFileChooser(".\\src\\Icon");
            jfc.showOpenDialog(null);
            File file = jfc.getSelectedFile();
            if (file != null) {
               strHinhAnh = file.getName();
                Image image = ImageIO.read(file);
                lblPost.setText("");
                int width = lblPost.getWidth();
                int heigh = lblPost.getHeight();
                lblPost.setIcon(new ImageIcon(image.getScaledInstance(width, heigh, 0)));
                 
            }
        } catch (Exception ex) {
            System.out.println("Error: " + ex.toString());
        }

    }

    public boolean checkTrungMa() {
        String ma = txtMa.getText();
        for (Movies movies : list) {
            if (ma.equals(movies.getMaPhim())) {
                JOptionPane.showMessageDialog(null, "ma phim da ton tai");
                return false;
            }
        }
        return true;
    }

    public boolean checkTrungTen() {
        String ten = txtTen.getText();

        for (Movies movies : list) {
            if (ten.equals(movies.getTenPhim())) {
                return false;
            }
        }
        return true;
    }

    public boolean checkTrungTenUpdate() {
        String ten = txtTen.getText();
        String ma = txtMa.getText();
        for (Movies movies : list) {
            if (ten.equals(movies.getTenPhim()) && !ma.equals(movies.getMaPhim())) {
                JOptionPane.showMessageDialog(null, "ten phim trung");
                return false;
            }
        }
        return true;
    }

    public boolean checkMaNull() {
        if (txtMa.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "hay nhap ma de thuc hien thao tac");
            return false;
        }
        return true;
    }

    public boolean checkMaKoTonTai() {
        String ma = txtMa.getText();
        for (Movies movies : list) {
            if (ma.equalsIgnoreCase(movies.getMaPhim())) {
                return true;
            }
        }
        JOptionPane.showMessageDialog(null, "khong tim thay ma phim\nhay kiem tra ma ban nhap la dung");
        return false;
    }

    public boolean checkFrom() {
        if (txtMa.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "chua nhap ma phim");
            txtMa.requestFocus();
            return false;
        }
        String ma = txtMa.getText();
        for (Movies movies : list) {
            if (ma.equals(movies.getMaPhim())) {
                JOptionPane.showMessageDialog(null, "ma phim da ton tai");
                return false;
            }
        }
        if (txtTen.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "chua nhap ten phim");
            txtTen.requestFocus();
            return false;
        }
        String ten = txtTen.getText();
        for (Movies movies : list) {
            if (ten.equals(movies.getTenPhim())) {
                JOptionPane.showMessageDialog(null, "ten phim da ton tai");
                return false;
            }
        }
        if (txtDaoDien.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "chua nhap ten dao dien phim");
            txtDaoDien.requestFocus();
            return false;
        }
        if (txtDaoDien.getText().matches("^(?!\\d+$)[\\p{L}0-9]+$") == false) {
            JOptionPane.showMessageDialog(null, "ten dao dien phai la chu hoac chu va so");
            txtDaoDien.requestFocus();
            return false;
        }
        if (cboHanhDong.isSelected() || cboHoatHinh.isSelected() || cboHocDuong.isSelected() || cboKinhDi.isSelected() || cboPhieuLuu.isSelected() || cboTinhCam.isSelected()) {

        } else {
            JOptionPane.showMessageDialog(null, "chon it nhat mot the loai phim");
            return false;
        }
        if (txtThoiLuong.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "chua nhap thoi luong phim");
            txtThoiLuong.requestFocus();
            return false;
        }
        try {
            double tg = Double.parseDouble(txtThoiLuong.getText());
            if (tg < 5 || tg > 1200) {
                JOptionPane.showMessageDialog(null, "thoi luong phim tu 5-->1200 phut");
                return false;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "thoi luong phai la so");
            return false;
        }
        if (txtNgay.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "chua nhap ngay ");
            txtNgay.requestFocus();
            return false;
        }
        try {
            Date date = java.sql.Date.valueOf(txtNgay.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ngay thang nam chua dung dinh dang(Nam-Thang-ngay)");
            return false;
        }
        if (txtGiaPhim.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "chua nhap gia phim");
            txtGiaPhim.requestFocus();
            return false;
        }

        try {
            Double gia = Double.parseDouble(txtGiaPhim.getText());
            if (gia < 0 || gia > 1500000) {
                JOptionPane.showMessageDialog(null, "gia ve tu 0vnd den 1500000vnd");
                return false;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "gia phai la so");
            return false;
        }
        return true;

    }

    public boolean checkFromupdate() {
        if (txtMa.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "chua nhap ma phim");
            txtMa.requestFocus();
            return false;
        }
        if (txtTen.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "chua nhap ten phim");
            txtTen.requestFocus();
            return false;
        }

        if (txtDaoDien.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "chua nhap ten dao dien phim");
            txtDaoDien.requestFocus();
            return false;
        }
        if (txtDaoDien.getText().matches("^[a-zA-Z ]+$") == false) {
            JOptionPane.showMessageDialog(null, "ten dao dien phai la chu");
            txtDaoDien.requestFocus();
            return false;
        }
        if (cboHanhDong.isSelected() || cboHoatHinh.isSelected() || cboHocDuong.isSelected() || cboKinhDi.isSelected() || cboPhieuLuu.isSelected() || cboTinhCam.isSelected()) {

        } else {
            JOptionPane.showMessageDialog(null, "chon it nhat mot the loai phim");
            return false;
        }
        if (txtThoiLuong.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "chua nhap thoi luong phim");
            txtThoiLuong.requestFocus();
            return false;
        }
        try {
            double tg = Double.parseDouble(txtThoiLuong.getText());
            if (tg < 5 || tg > 1200) {
                JOptionPane.showMessageDialog(null, "thoi luong phim tu 5-->1200 phut");
                return false;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "thoi luong phai la so");
            return false;
        }
        if (txtNgay.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "chua nhap ngay ");
            txtNgay.requestFocus();
            return false;
        }
        try {
            Date date = java.sql.Date.valueOf(txtNgay.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ngay thang nam chua dung dinh dang(Nam-Thang-ngay)");
            return false;
        }
        if (txtGiaPhim.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "chua nhap gia phim");
            txtGiaPhim.requestFocus();
            return false;
        }

        try {
            Double gia = Double.parseDouble(txtGiaPhim.getText());
            if (gia < 0 || gia > 1500000) {
                JOptionPane.showMessageDialog(null, "gia ve tu 0vnd den 1500000vnd");
                return false;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "gia phai la so");
            return false;
        }
        return true;

    }

    public void Nhanvien() {
        QuanLyNhanVien nvi = new QuanLyNhanVien();
//                JOptionPane.showMessageDialog(null, "Login succesfully");
        nvi.setVisible(true);
        this.dispose();
        return;

    }

    public void Ve() {
        QuanLyVe ve = new QuanLyVe();
//                JOptionPane.showMessageDialog(null, "Login succesfully");
        ve.setVisible(true);
        this.dispose();
        return;

    }

    public void Phong() {
        QuanLyPhong phong = new QuanLyPhong();
//                JOptionPane.showMessageDialog(null, "Login succesfully");
        phong.setVisible(true);
        this.dispose();
        return;

    }

    public void Thietbi() {
        QuanLyThietBi tbi = new QuanLyThietBi();
//                JOptionPane.showMessageDialog(null, "Login succesfully");
        tbi.setVisible(true);
        this.dispose();
        return;

    }

    public void Khachhang() {
        PhanAnhKH khachhang = new PhanAnhKH();
//                JOptionPane.showMessageDialog(null, "Login succesfully");
        khachhang.setVisible(true);
        this.dispose();
        return;

    }

    public void Phim() {
        QuanLyPhim phim = new QuanLyPhim();
//                JOptionPane.showMessageDialog(null, "Login succesfully");
        phim.setVisible(true);
        this.dispose();
        return;

    }
}
